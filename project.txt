New Stock:
1. Add stock manually
   * item no. will not be given at the very beginning
   * Only description will be given

View Stcok:
1. View Stock by click check
2. Make the Cost color the same as background color
3. Can edit all the things directly from table
4. Provide Pack, Restork and Sell functions beside 
   the view stock table
5. Search item by item no and description

Backend:
1. Provide report function to calculate the stock in and sold from targetdate
   From-To Date:
   Total Sales:
   Total Cost:
   Total Profit:
   Current Stock Value:
2. Excel import stock data function


Steps to start a project:
1. python -m django --version
2. cd to the path of django when django is installed
3. django-admin startproject <prjName>
4. cd to ./<prjName>
5. python manage.py runserver, to confirm the project is prepared successfully
   ** change the port by python manage.py runserver 0:8000
6. python manage.py startapp <appName>
7. cd to ./<appName>
edit views.py
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.
def index(request):
	return HttpResponse("Hello world")

create urls.py
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.conf.urls import url

from . import views

urlpattern = [
	url(r'^$', views.index, name='index'),
]

cd <prjName>/urls.py
from django.conf.urls import include, url
from django.contrib import admin

urlpatterns = [
	url(r'^<appName>/', include('<appName>.urls')),
    url(r'^admin/', admin.site.urls),
]

8. python manage.py runserver
9. use external html for django
download good template

create static folder
-> put css, images files

create template folder
-> put html
-> edit html, first line add
{% load static %}

change all css and img as:
href="{% static '/assets/css/main.css' %}"

cd <prjName>/settings.py
TEMPLATES -> DIRS -> Add the template path here

STAITC ->
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'statis'),
	'C:/Users/user/Desktop/tradeStockControl/tradeStockControlApp/static'
]


Setup Rest Framework
1. http://www.django-rest-framework.org/
2. http://agiliq.com/blog/2014/12/building-a-restful-api-with-django-rest-framework/

Problem encounter:
1. DB Connection Error
    raise ConnectionDoesNotExist("The connection %s doesn't exist" % alias)
django.db.utils.ConnectionDoesNotExist: The connection default doesn't exist

Ref: http://www.elfgzp.cn/index.php/archives/149.html
- download and install 32-bit mysql connector 
- pip install MySQL-python
- pip install mysql-connector
- pip install mysqlclient==1.3.4

  *** Delete other default, don't comment it

2. Django integrate with existing DB
	python manage.py inspectdb > models.py
